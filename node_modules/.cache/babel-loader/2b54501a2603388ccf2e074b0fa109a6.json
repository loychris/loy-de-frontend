{"ast":null,"code":"var _jsxFileName = \"/home/chris/projects/loy.de/loy-de-frontend/src/components/Deathstacks/Tower/Tower.js\";\nimport React, { Component } from 'react';\nimport BlueStone from \"./BlueStone.svg\";\nimport RedStone from \"./RedStone.svg\";\nimport classes from './Tower.module.css';\n\nclass Tower extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.calcStonePosition = (x, y, height) => {\n      return {\n        left: `${this.props.boardLength / 10 * x + 0.01 * this.props.boardLength}px`,\n        top: `${this.props.boardLength / 10 * y - 11 * height + 0.02 * this.props.boardLength}px`,\n        width: `${this.props.boardLength / 10 * 0.8}px`\n      };\n    };\n  }\n\n  render() {\n    const stones = [];\n    const towerArr = this.props.stones.split('');\n\n    for (let i = 0; i < towerArr.length; i++) {\n      if (towerArr[i] === 'r') {\n        stones.push(React.createElement(\"img\", {\n          style: this.calcStonePosition(this.props.x, this.props.y, i),\n          className: classes.Stone,\n          src: RedStone,\n          alt: \"red Stone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n      } else {\n        stones.push(React.createElement(\"img\", {\n          style: this.calcStonePosition(this.props.x, this.props.y, i),\n          className: classes.Stone,\n          src: BlueStone,\n          alt: \"blue stone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.tower,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, stones);\n  }\n\n}\n\nexport default Tower;","map":{"version":3,"sources":["/home/chris/projects/loy.de/loy-de-frontend/src/components/Deathstacks/Tower/Tower.js"],"names":["React","Component","classes","Tower","calcStonePosition","x","y","height","left","props","boardLength","top","width","render","stones","towerArr","split","i","length","push","Stone","RedStone","BlueStone","tower"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAG1BG,iBAH0B,GAGN,CAACC,CAAD,EAAIC,CAAJ,EAAOC,MAAP,KAAkB;AAClC,aAAO;AACHC,QAAAA,IAAI,EAAG,GAAE,KAAKC,KAAL,CAAWC,WAAX,GAAuB,EAAvB,GAA0BL,CAA1B,GAA4B,OAAK,KAAKI,KAAL,CAAWC,WAAY,IAD9D;AAEHC,QAAAA,GAAG,EAAG,GAAE,KAAKF,KAAL,CAAWC,WAAX,GAAuB,EAAvB,GAA0BJ,CAA1B,GAA4B,KAAGC,MAA/B,GAAsC,OAAK,KAAKE,KAAL,CAAWC,WAAY,IAFvE;AAGHE,QAAAA,KAAK,EAAG,GAAE,KAAKH,KAAL,CAAWC,WAAX,GAAuB,EAAvB,GAA0B,GAAI;AAHrC,OAAP;AAKH,KATyB;AAAA;;AAc1BG,EAAAA,MAAM,GAAE;AACJ,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWK,MAAX,CAAkBE,KAAlB,CAAwB,EAAxB,CAAjB;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,QAAQ,CAACG,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9B,UAAGF,QAAQ,CAACE,CAAD,CAAR,KAAgB,GAAnB,EAAwB;AACpBH,QAAAA,MAAM,CAACK,IAAP,CAAY;AAAK,UAAA,KAAK,EAAE,KAAKf,iBAAL,CAAuB,KAAKK,KAAL,CAAWJ,CAAlC,EAAqC,KAAKI,KAAL,CAAWH,CAAhD,EAAmDW,CAAnD,CAAZ;AAAmE,UAAA,SAAS,EAAEf,OAAO,CAACkB,KAAtF;AAA6F,UAAA,GAAG,EAAEC,QAAlG;AAA4G,UAAA,GAAG,EAAC,WAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACH,OAFD,MAEO;AACHP,QAAAA,MAAM,CAACK,IAAP,CAAY;AAAK,UAAA,KAAK,EAAE,KAAKf,iBAAL,CAAuB,KAAKK,KAAL,CAAWJ,CAAlC,EAAqC,KAAKI,KAAL,CAAWH,CAAhD,EAAmDW,CAAnD,CAAZ;AAAmE,UAAA,SAAS,EAAEf,OAAO,CAACkB,KAAtF;AAA6F,UAAA,GAAG,EAAEE,SAAlG;AAA6G,UAAA,GAAG,EAAC,YAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACH;AACJ;;AAED,WACI;AAAK,MAAA,SAAS,EAAEpB,OAAO,CAACqB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,MADL,CADJ;AAKH;;AA/ByB;;AAiC9B,eAAeX,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport BlueStone from './BlueStone.svg';\nimport RedStone from './RedStone.svg';\nimport classes from './Tower.module.css';\n\nclass Tower extends Component {\n\n\n    calcStonePosition = (x, y, height) => {\n        return {\n            left: `${this.props.boardLength/10*x+0.01*this.props.boardLength}px`,\n            top: `${this.props.boardLength/10*y-11*height+0.02*this.props.boardLength}px`,\n            width: `${this.props.boardLength/10*0.8}px`\n        }\n    } \n\n\n\n\n    render(){\n        const stones = []\n        const towerArr=  this.props.stones.split('')\n        \n        for(let i=0;i<towerArr.length;i++){\n            if(towerArr[i] === 'r') {\n                stones.push(<img style={this.calcStonePosition(this.props.x, this.props.y, i)} className={classes.Stone} src={RedStone} alt='red Stone'/>)\n            } else {\n                stones.push(<img style={this.calcStonePosition(this.props.x, this.props.y, i)} className={classes.Stone} src={BlueStone} alt='blue stone'/>)\n            }\n        }\n\n        return(\n            <div className={classes.tower}>\n                {stones}\n            </div>\n        )\n    }\n}\nexport default Tower;"]},"metadata":{},"sourceType":"module"}