{"ast":null,"code":"var _jsxFileName = \"/home/chris/projects/loy.de/loy-de-frontend/src/components/Deathstacks/Deathstacks.js\";\nimport React, { Component } from 'react';\nimport classes from './Deathstacks.module.css';\nimport Board from './Board/Board';\nimport Tower from './Tower/Tower';\nconst LENGTH = 800;\nconst DIRECTIONS = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n\nclass Deathstacks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      towers: [['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bb'], ['rr', '_', '_', '_', '_', '_', '_', '_', '_', 'bbrrr']],\n      selected: null\n    };\n\n    this.select = (x, y) => {\n      this.setState({\n        selected: [x, y]\n      });\n    };\n\n    this.move = (n, [x, y]) => {\n      const selectedTowerStringOld = this.state.towers[this.state.selected[0]][this.state.selected[1]];\n      const selectedTowerStringNew = selectedTowerStringNew.splice(selectedTowerStringOld.length, n);\n      console.log('new String: ', selectedTowerStringOld);\n    };\n\n    this.getPossibleMoves = () => {\n      if (this.state.selected === null) return null;\n      const x = this.state.selected[0];\n      const y = this.state.selected[1];\n      const tower = this.state.towers[x][y].split('');\n      if (tower[0] === '_') return null;\n      const possibleTargets = [];\n      const directions = this.getDirections(x, y);\n\n      for (let dir = 0; dir < directions.length; dir++) {\n        let currentPos = [x, y];\n        let currentDir = [directions[dir][0], directions[dir][1]];\n        let nextPos = [currentPos[0] + directions[dir][0], currentPos[1] + directions[dir][1]];\n        let newDir = currentDir;\n\n        for (let k = 1; k < tower.length + 1; k++) {\n          nextPos = [currentPos[0] + currentDir[0], currentPos[1] + currentDir[1]];\n\n          if (nextPos[0] < 0 || nextPos[0] > 9) {\n            newDir[0] = currentDir[0] * -1;\n          }\n\n          if (nextPos[1] < 0 || nextPos[1] > 9) {\n            newDir[1] = currentDir[1] * -1;\n          }\n\n          nextPos = [currentPos[0] + newDir[0], currentPos[1] + newDir[1]];\n          currentDir = newDir;\n          currentPos = nextPos;\n          possibleTargets.push(`${currentPos[0]}${currentPos[1]}`);\n        }\n      }\n\n      return [...new Set(possibleTargets.filter(m => {\n        return m !== `${x}${y}`;\n      }))].sort().join(';');\n    };\n\n    this.getDirections = (x, y) => {\n      let directions = DIRECTIONS;\n      if (x === 0) directions = directions.filter(dir => {\n        return dir[0] !== -1;\n      });\n      if (x === 9) directions = directions.filter(dir => {\n        return dir[0] !== 1;\n      });\n      if (y === 0) directions = directions.filter(dir => {\n        return dir[1] !== -1;\n      });\n      if (y === 9) directions = directions.filter(dir => {\n        return dir[1] !== 1;\n      });\n      return directions;\n    };\n  }\n\n  render() {\n    let towers = [];\n\n    for (let row = 0; row < 10; row++) {\n      for (let col = 0; col < 10; col++) {\n        if (this.state.towers[col][row] !== '_') {\n          towers.push(React.createElement(Tower, {\n            clicked: this.state.towers[col][row].clicked,\n            x: col,\n            y: row,\n            select: this.select,\n            boardLength: LENGTH,\n            stones: this.state.towers[col][row],\n            key: [col, row],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n\n    this.move(2, [0, 0]);\n    return React.createElement(\"div\", {\n      className: classes.Deathstacks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Board, {\n      highlighted: this.getPossibleMoves(),\n      length: LENGTH,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), towers);\n  }\n\n}\n\nexport default Deathstacks;","map":{"version":3,"sources":["/home/chris/projects/loy.de/loy-de-frontend/src/components/Deathstacks/Deathstacks.js"],"names":["React","Component","classes","Board","Tower","LENGTH","DIRECTIONS","Deathstacks","state","towers","selected","select","x","y","setState","move","n","selectedTowerStringOld","selectedTowerStringNew","splice","length","console","log","getPossibleMoves","tower","split","possibleTargets","directions","getDirections","dir","currentPos","currentDir","nextPos","newDir","k","push","Set","filter","m","sort","join","render","row","col","clicked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Deathstacks.module.css';\nimport Board from './Board/Board';\nimport Tower from './Tower/Tower';\n\nconst LENGTH = 800;\nconst DIRECTIONS = [[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];\n\nclass Deathstacks extends Component {\n    \n    state = {\n        towers: [\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bb'],\n            ['rr', '_', '_', '_', '_', '_', '_', '_', '_','bbrrr'],\n        ],\n        selected: null\n    }\n\n\n    select = (x, y) => {\n        this.setState({selected: [x,y]});\n    }\n\n    move = (n, [x,y]) => {\n        const selectedTowerStringOld = this.state.towers[this.state.selected[0]][this.state.selected[1]];\n        const selectedTowerStringNew = selectedTowerStringNew.splice(selectedTowerStringOld.length, n);\n        console.log('new String: ', selectedTowerStringOld);\n    }\n    \n\n    getPossibleMoves = () => {\n        if(this.state.selected === null) return null;\n        const x = this.state.selected[0];\n        const y = this.state.selected[1];\n        const tower = this.state.towers[x][y].split('');\n        if(tower[0] === '_') return null;\n        const possibleTargets = [];\n        const directions = this.getDirections(x,y);\n        \n        for(let dir=0;dir<directions.length;dir++){\n                let currentPos = [x,y];\n                let currentDir = [directions[dir][0],directions[dir][1]];\n                let nextPos = [currentPos[0]+directions[dir][0],currentPos[1]+directions[dir][1]];\n                let newDir = currentDir;\n                for(let k=1;k<tower.length+1;k++){\n                    nextPos = [currentPos[0]+currentDir[0],currentPos[1]+currentDir[1]];\n                    if(nextPos[0]<0||nextPos[0]>9) {\n                        newDir[0] = currentDir[0]*-1;\n                    }\n                    if(nextPos[1]<0||nextPos[1]>9) {\n                        newDir[1] = currentDir[1]*-1;\n                    }\n                    nextPos = [currentPos[0]+newDir[0],currentPos[1]+newDir[1]];\n                    currentDir = newDir;\n                    currentPos = nextPos;\n                    possibleTargets.push(`${currentPos[0]}${currentPos[1]}`);\n                }\n        }\n        return [ ...new Set(possibleTargets.filter(m => {return m!==`${x}${y}`}))].sort().join(';');\n    }\n\n    getDirections = (x,y) => {\n        let directions = DIRECTIONS;\n        if(x===0) directions = directions.filter(dir => {return dir[0] !== -1});\n        if(x===9) directions = directions.filter(dir => {return dir[0] !==  1});\n        if(y===0) directions = directions.filter(dir => {return dir[1] !== -1});\n        if(y===9) directions = directions.filter(dir => {return dir[1] !==  1});\n        return directions;\n    }\n\n    render(){\n        let towers = [];\n        for(let row=0;row<10;row++){\n            for(let col=0;col<10;col++){\n                if(this.state.towers[col][row] !== '_'){\n                    towers.push(<Tower \n                                    clicked={this.state.towers[col][row].clicked} \n                                    x={col} \n                                    y={row} \n                                    select={this.select}\n                                    boardLength={LENGTH} \n                                    stones={this.state.towers[col][row]}\n                                    key={[col, row]}/>);\n                }\n            }\n        }\n        this.move(2,[0,0]);\n        return (\n            <div className={classes.Deathstacks}>\n                <Board highlighted={this.getPossibleMoves()} length={LENGTH}/>\n                {towers}\n            </div>\n        )\n    }\n}\nexport default Deathstacks;"]},"metadata":{},"sourceType":"module"}